generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" 
  url      = env("DATABASE_URL") 
}

model Decision {
  id         String      @id @default(uuid()) 
  title      String?
  createdAt  DateTime    @default(now()) 
  choices    Choice[]    
  comparisons Comparison[] 
}

model Choice {
  id         Int       @id @default(autoincrement()) 
  decision   Decision  @relation(fields: [decisionId], references: [id]) 
  decisionId String    @map("decision_id") 
  text       String    
  @@map("choices") 
  choice1Comparisons Comparison[] @relation("choice1Comparisons")
  choice2Comparisons Comparison[] @relation("choice2Comparisons")
  Comparison Comparison[]
}

model User {
  id            String       @id
  email         String?      @unique
  createdAt     DateTime     @default(now())
  comparisons   Comparison[]
  
  @@map("users")
}

model Comparison {
  id           Int        @id @default(autoincrement())
  decision     Decision   @relation(fields: [decisionId], references: [id])
  decisionId   String     @map("decision_id")
  choice1Id    Int        @map("choice1_id")
  choice2Id    Int        @map("choice2_id")
  choice1      Choice     @relation("choice1Comparisons", fields: [choice1Id], references: [id])
  choice2      Choice     @relation("choice2Comparisons", fields: [choice2Id], references: [id])
  winnerId     Int?       @map("winner_id")
  winner       Choice?    @relation(fields: [winnerId], references: [id])
  createdAt    DateTime   @default(now())
  servedAt     DateTime?
  user         User       @relation(fields: [userId], references: [id])
  userId       String     @map("user_id")
  
  @@map("comparisons")
  @@unique([choice1Id, choice2Id, userId])
}